{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["'use strict';\n// Slider logic\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    const sliderTrack = document.querySelector('.slider-track');\n    const slides = document.querySelectorAll('.slide');\n    const dotsContainer = document.querySelector('.slider-dots');\n    let currentIndex = 0;\n    let startX = 0;\n    let isDragging = false;\n    function initSlider() {\n        if (window.innerWidth >= 1280) {\n            destroySlider();\n            return;\n        }\n        // Recreate dots after every initialization\n        createDots();\n        updateSliderPosition();\n        addEventListeners();\n    }\n    function destroySlider() {\n        dotsContainer.innerHTML = '';\n        sliderTrack.style.transform = '';\n        removeEventListeners();\n    }\n    function createDots() {\n        dotsContainer.innerHTML = '';\n        const slidesToShow = getSlidesToShow();\n        const dotsCount = Math.ceil(slides.length / slidesToShow);\n        for(let i = 0; i < dotsCount; i++){\n            const dot = document.createElement('div');\n            dot.classList.add('dot');\n            dot.addEventListener('click', ()=>goToSlide(i * slidesToShow));\n            dotsContainer.appendChild(dot);\n        }\n        updateDots();\n    }\n    function getSlidesToShow() {\n        return window.innerWidth >= 640 ? 2 : 1;\n    }\n    function updateDots() {\n        const slidesToShow = getSlidesToShow();\n        const activeDotIndex = Math.floor(currentIndex / slidesToShow);\n        document.querySelectorAll('.dot').forEach((dot, index)=>{\n            dot.classList.toggle('active', index === activeDotIndex);\n        });\n    }\n    function updateSliderPosition() {\n        const slidesToShow = getSlidesToShow();\n        const maxIndex = slides.length - slidesToShow;\n        currentIndex = Math.min(currentIndex, maxIndex);\n        goToSlide(currentIndex);\n    }\n    function goToSlide(index) {\n        const slideWidth = slides[0].clientWidth;\n        currentIndex = index;\n        sliderTrack.style.transform = `translateX(-${slideWidth * currentIndex}px)`;\n        updateDots();\n    }\n    function handleSwipe(direction) {\n        const slidesToShow = getSlidesToShow();\n        const maxIndex = slides.length - slidesToShow;\n        if (direction === 'left' && currentIndex < maxIndex) currentIndex += slidesToShow;\n        else if (direction === 'right' && currentIndex > 0) currentIndex -= slidesToShow;\n        currentIndex = Math.max(0, Math.min(currentIndex, maxIndex));\n        goToSlide(currentIndex);\n    }\n    function addEventListeners() {\n        sliderTrack.addEventListener('touchstart', handleTouchStart);\n        sliderTrack.addEventListener('touchmove', handleTouchMove);\n    }\n    function removeEventListeners() {\n        sliderTrack.removeEventListener('touchstart', handleTouchStart);\n        sliderTrack.removeEventListener('touchmove', handleTouchMove);\n    }\n    function handleTouchStart(e) {\n        if (window.innerWidth >= 1280) return;\n        startX = e.touches[0].clientX;\n        isDragging = true;\n    }\n    function handleTouchMove(e) {\n        if (window.innerWidth >= 1280 || !isDragging) return;\n        const currentX = e.touches[0].clientX;\n        const diff = startX - currentX;\n        if (Math.abs(diff) > 50) {\n            handleSwipe(diff > 0 ? 'left' : 'right');\n            isDragging = false;\n        }\n    }\n    window.addEventListener('resize', ()=>{\n        initSlider();\n    });\n    initSlider();\n});\n// Dropdown logic\nconst dropdown = document.querySelector('.dropdown');\nconst dropdownNavLinks = document.querySelectorAll('.dropdown__nav-link');\nconst openBtn = document.querySelector('.icon--dropdown-open');\nconst closeBtn = document.querySelector('.icon--dropdown-close');\nconst backdrop = document.getElementById('backdrop');\nconst page = document.querySelector('.page');\n// Open dropdown\nopenBtn.addEventListener('click', ()=>{\n    dropdown.classList.remove('dropdown--non-visible');\n    dropdown.classList.add('dropdown--active');\n    page.classList.add('page--no-scroll');\n    // Hide/display buttons after animation\n    setTimeout(()=>{\n        openBtn.style.display = 'none';\n        closeBtn.style.display = 'block';\n        closeBtn.style.opacity = '1';\n        backdrop.classList.add('backdrop--active');\n        openBtn.classList.remove('fade-out');\n    }, 200);\n});\n// Close dropdown\ncloseBtn.addEventListener('click', ()=>{\n    dropdown.classList.remove('dropdown--active');\n    page.classList.remove('page--no-scroll');\n    setTimeout(()=>{\n        closeBtn.style.display = 'none';\n        openBtn.style.display = 'block';\n        openBtn.style.opacity = '1'; //\n        backdrop.classList.remove('backdrop--active');\n        closeBtn.classList.remove('fade-out');\n        dropdown.classList.add('dropdown--non-visible');\n    }, 200);\n});\ndropdownNavLinks.forEach((link)=>{\n    link.addEventListener('click', (event)=>{\n        event.preventDefault(); // For click delay\n        dropdown.classList.remove('dropdown--active');\n        backdrop.classList.remove('backdrop--active');\n        closeBtn.style.display = 'none';\n        openBtn.style.display = 'block';\n        openBtn.style.opacity = '1';\n        page.classList.remove('page--no-scroll');\n        setTimeout(()=>{\n            dropdown.classList.add('dropdown--non-visible');\n        }, 200);\n        // 150ms delay\n        setTimeout(()=>{\n            window.location.href = link.href; // Go to link\n        }, 220);\n    });\n});\n// Sections scroll animation\nconst sections = document.querySelectorAll('.scroll-object');\nconst observer = new IntersectionObserver((entries)=>{\n    entries.forEach((entry)=>{\n        if (entry.isIntersecting) entry.target.classList.add('scroll-object--visible');\n    });\n}, {\n    threshold: 0.2\n});\nif (window.innerWidth <= 640) sections[0].classList.add('scroll-object--visible');\nsections.forEach((section, index)=>{\n    if (window.innerWidth > 640 || index !== 0) observer.observe(section);\n});\n\n//# sourceMappingURL=index.cbc8356e.js.map\n","'use strict';\n\n// Slider logic\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const sliderTrack = document.querySelector('.slider-track');\n  const slides = document.querySelectorAll('.slide');\n  const dotsContainer = document.querySelector('.slider-dots');\n  let currentIndex = 0;\n  let startX = 0;\n  let isDragging = false;\n\n  function initSlider() {\n    if (window.innerWidth >= 1280) {\n      destroySlider();\n      return;\n    }\n\n    // Recreate dots after every initialization\n    createDots();\n    updateSliderPosition();\n    addEventListeners();\n  }\n\n  function destroySlider() {\n    dotsContainer.innerHTML = '';\n    sliderTrack.style.transform = '';\n    removeEventListeners();\n  }\n\n  function createDots() {\n    dotsContainer.innerHTML = '';\n    const slidesToShow = getSlidesToShow();\n    const dotsCount = Math.ceil(slides.length / slidesToShow);\n\n    for (let i = 0; i < dotsCount; i++) {\n      const dot = document.createElement('div');\n      dot.classList.add('dot');\n      dot.addEventListener('click', () => goToSlide(i * slidesToShow));\n      dotsContainer.appendChild(dot);\n    }\n    updateDots();\n  }\n\n  function getSlidesToShow() {\n    return window.innerWidth >= 640 ? 2 : 1;\n  }\n\n  function updateDots() {\n    const slidesToShow = getSlidesToShow();\n    const activeDotIndex = Math.floor(currentIndex / slidesToShow);\n    document.querySelectorAll('.dot').forEach((dot, index) => {\n      dot.classList.toggle('active', index === activeDotIndex);\n    });\n  }\n\n  function updateSliderPosition() {\n    const slidesToShow = getSlidesToShow();\n    const maxIndex = slides.length - slidesToShow;\n    currentIndex = Math.min(currentIndex, maxIndex);\n    goToSlide(currentIndex);\n  }\n\n  function goToSlide(index) {\n    const slideWidth = slides[0].clientWidth;\n    currentIndex = index;\n    sliderTrack.style.transform = `translateX(-${slideWidth * currentIndex}px)`;\n    updateDots();\n  }\n\n  function handleSwipe(direction) {\n    const slidesToShow = getSlidesToShow();\n    const maxIndex = slides.length - slidesToShow;\n\n    if (direction === 'left' && currentIndex < maxIndex) {\n      currentIndex += slidesToShow;\n    } else if (direction === 'right' && currentIndex > 0) {\n      currentIndex -= slidesToShow;\n    }\n\n    currentIndex = Math.max(0, Math.min(currentIndex, maxIndex));\n    goToSlide(currentIndex);\n  }\n\n  function addEventListeners() {\n    sliderTrack.addEventListener('touchstart', handleTouchStart);\n    sliderTrack.addEventListener('touchmove', handleTouchMove);\n  }\n\n  function removeEventListeners() {\n    sliderTrack.removeEventListener('touchstart', handleTouchStart);\n    sliderTrack.removeEventListener('touchmove', handleTouchMove);\n  }\n\n  function handleTouchStart(e) {\n    if (window.innerWidth >= 1280) return;\n    startX = e.touches[0].clientX;\n    isDragging = true;\n  }\n\n  function handleTouchMove(e) {\n    if (window.innerWidth >= 1280 || !isDragging) return;\n    const currentX = e.touches[0].clientX;\n    const diff = startX - currentX;\n\n    if (Math.abs(diff) > 50) {\n      handleSwipe(diff > 0 ? 'left' : 'right');\n      isDragging = false;\n    }\n  }\n\n  window.addEventListener('resize', () => {\n    initSlider();\n  });\n\n  initSlider();\n});\n\n// Dropdown logic\n\nconst dropdown = document.querySelector('.dropdown');\n\nconst dropdownNavLinks = document.querySelectorAll('.dropdown__nav-link');\nconst openBtn = document.querySelector('.icon--dropdown-open');\nconst closeBtn = document.querySelector('.icon--dropdown-close');\nconst backdrop = document.getElementById('backdrop');\nconst page = document.querySelector('.page');\n\n// Open dropdown\nopenBtn.addEventListener('click', () => {\n  dropdown.classList.remove('dropdown--non-visible');\n  dropdown.classList.add('dropdown--active');\n  page.classList.add('page--no-scroll');\n\n  // Hide/display buttons after animation\n  setTimeout(() => {\n    openBtn.style.display = 'none';\n    closeBtn.style.display = 'block';\n    closeBtn.style.opacity = '1';\n    backdrop.classList.add('backdrop--active');\n    openBtn.classList.remove('fade-out');\n  }, 200);\n});\n\n// Close dropdown\ncloseBtn.addEventListener('click', () => {\n  dropdown.classList.remove('dropdown--active');\n  page.classList.remove('page--no-scroll');\n\n  setTimeout(() => {\n    closeBtn.style.display = 'none';\n    openBtn.style.display = 'block';\n    openBtn.style.opacity = '1'; //\n    backdrop.classList.remove('backdrop--active');\n    closeBtn.classList.remove('fade-out');\n    dropdown.classList.add('dropdown--non-visible');\n  }, 200);\n});\n\ndropdownNavLinks.forEach((link) => {\n  link.addEventListener('click', (event) => {\n    event.preventDefault(); // For click delay\n\n    dropdown.classList.remove('dropdown--active');\n    backdrop.classList.remove('backdrop--active');\n    closeBtn.style.display = 'none';\n    openBtn.style.display = 'block';\n    openBtn.style.opacity = '1';\n    page.classList.remove('page--no-scroll');\n\n    setTimeout(() => {\n      dropdown.classList.add('dropdown--non-visible');\n    }, 200);\n\n    // 150ms delay\n    setTimeout(() => {\n      window.location.href = link.href; // Go to link\n    }, 220);\n  });\n});\n\n// Sections scroll animation\nconst sections = document.querySelectorAll('.scroll-object');\n\nconst observer = new IntersectionObserver(\n  (entries) => {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        entry.target.classList.add('scroll-object--visible');\n      }\n    });\n  },\n  { threshold: 0.2 },\n);\n\nif (window.innerWidth <= 640) {\n  sections[0].classList.add('scroll-object--visible');\n}\n\nsections.forEach((section, index) => {\n  if (window.innerWidth > 640 || index !== 0) {\n    observer.observe(section);\n  }\n});\n"],"names":["document","addEventListener","sliderTrack","querySelector","slides","querySelectorAll","dotsContainer","currentIndex","startX","isDragging","initSlider","window","innerWidth","innerHTML","style","transform","removeEventListener","handleTouchStart","handleTouchMove","createDots","slidesToShow","getSlidesToShow","dotsCount","Math","ceil","length","i","dot","createElement","classList","add","goToSlide","appendChild","updateDots","updateSliderPosition","maxIndex","min","activeDotIndex","floor","forEach","index","toggle","slideWidth","clientWidth","e","touches","clientX","currentX","diff","abs","handleSwipe","direction","max","dropdown","dropdownNavLinks","openBtn","closeBtn","backdrop","getElementById","page","remove","setTimeout","display","opacity","link","event","preventDefault","location","href","sections","observer","IntersectionObserver","entries","entry","isIntersecting","target","threshold","section","observe"],"version":3,"file":"index.cbc8356e.js.map"}